package ems.gui;
// STATUS: DONE
// ISSUES: NONE

import ems.model.FairCenter;
import ems.model.user.User;
import ems.test.TestClass;
import ems.utils.AppDataAssistant;
import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 * Main window JFrame with adaptive JPanels
 * @author 1DK_1150475_1161975_1161976
 */
public class EMS extends javax.swing.JFrame {
    
    /**
     * Main method to execute.
     * @param args the command line arguments
     * @throws java.io.FileNotFoundException FairCenter did not receive data
     * @throws java.lang.ClassNotFoundException GUI related exception
     * @throws java.lang.InstantiationException GUI related exception
     * @throws java.lang.IllegalAccessException GUI related exception
     * @throws javax.swing.UnsupportedLookAndFeelException GUI related exception
     */
    public static void main(String args[]) throws FileNotFoundException, IOException, ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
//        FairCenter activeCenter = TestClass.internalTesting();
        FairCenter activeCenter = AppDataAssistant.appDataAssistant();
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        java.awt.EventQueue.invokeLater(() -> {
            new SignInUI(activeCenter).setVisible(true);
        });
        System.out.println("[EMS MESSAGE] Runnable passed GUI invoke checkpoint");
    }

    public void reStartApp(FairCenter fairCenter){
        java.awt.EventQueue.invokeLater(() -> {
            new SignInUI(fairCenter).setVisible(true);
        });
    }
    
    // Class variables
    private final FairCenter fairCenter;
    private final JPanel dashboardPanel;
    private final JPanel eventsPanel;
    private final JPanel applicationsPanel;
    private final JPanel standsPanel;
    private final JPanel conflictsPanel;
    private final JPanel servicesPanel;
    
    /**
     * Creates a new EMS Main UI
     * @param fairCenter
     * @param activeUser
     */
    public EMS(FairCenter fairCenter, User activeUser) {
        this.fairCenter = fairCenter;
        this.fairCenter.setActiveUser(activeUser);
        this.dashboardPanel = new DashboardPanel(this);
        this.eventsPanel = new EventsPanel(this);
        this.applicationsPanel = new ApplicationsPanel(this);
        this.standsPanel = new WorkshopsPanel(this);
        this.conflictsPanel = new ConflictsPanel(this);
        this.servicesPanel = new ServicesPanel(this);
        initComponents();
        setCategoriesHotKeys();
        updateMainPanel(dashboardPanel);
    }
    
    public FairCenter getActiveFairCenter() {
        return fairCenter;
    }
    
    public JPanel getDashboardPanel() {
        return dashboardPanel;
    }
    
    public JPanel getApplicationsPanel() {
        return applicationsPanel;
    }
    
    private void setCategoriesHotKeys(){
        dashboardToggle.setMnemonic(KeyEvent.VK_1);
        eventsToggle.setMnemonic(KeyEvent.VK_2);
        applicationsToggle.setMnemonic(KeyEvent.VK_3);
        workshopsToggle.setMnemonic(KeyEvent.VK_4);
        conflictsToggle.setMnemonic(KeyEvent.VK_5);
        servicesToggle.setMnemonic(KeyEvent.VK_6);
    }
    
    public final void updateMainPanel(JPanel newActivePanel){
        mainPanel.removeAll();
        mainPanel.setLayout(new BorderLayout());
        mainPanel.add(newActivePanel, BorderLayout.CENTER);
        mainPanel.validate();
        mainPanel.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidePanel = new javax.swing.JPanel();
        appIcon = new javax.swing.JLabel();
        dashboardToggle = new javax.swing.JToggleButton();
        eventsToggle = new javax.swing.JToggleButton();
        applicationsToggle = new javax.swing.JToggleButton();
        workshopsToggle = new javax.swing.JToggleButton();
        conflictsToggle = new javax.swing.JToggleButton();
        servicesToggle = new javax.swing.JToggleButton();
        mainPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Event Management System");
        setExtendedState(6);
        setIconImage(new ImageIcon("src/ems/assets/ems.png").getImage());

        sidePanel.setBackground(new java.awt.Color(51, 51, 51));
        sidePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        appIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/ems.png"))); // NOI18N

        dashboardToggle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        dashboardToggle.setForeground(new java.awt.Color(255, 255, 255));
        dashboardToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/dashboard.png"))); // NOI18N
        dashboardToggle.setSelected(true);
        dashboardToggle.setText("Dashboard");
        dashboardToggle.setToolTipText("View center information and system status");
        dashboardToggle.setBorderPainted(false);
        dashboardToggle.setContentAreaFilled(false);
        dashboardToggle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dashboardToggle.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/dashboard-selected.png"))); // NOI18N
        dashboardToggle.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/dashboard-selected.png"))); // NOI18N
        dashboardToggle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        dashboardToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardToggleActionPerformed(evt);
            }
        });

        eventsToggle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        eventsToggle.setForeground(new java.awt.Color(255, 255, 255));
        eventsToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/expo.png"))); // NOI18N
        eventsToggle.setText("Events");
        eventsToggle.setToolTipText("Manage center's events");
        eventsToggle.setBorderPainted(false);
        eventsToggle.setContentAreaFilled(false);
        eventsToggle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eventsToggle.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/expo-selected.png"))); // NOI18N
        eventsToggle.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/expo-selected.png"))); // NOI18N
        eventsToggle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eventsToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventsToggleActionPerformed(evt);
            }
        });

        applicationsToggle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        applicationsToggle.setForeground(new java.awt.Color(255, 255, 255));
        applicationsToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/applications.png"))); // NOI18N
        applicationsToggle.setText("Applications");
        applicationsToggle.setToolTipText("Manage all types of applications");
        applicationsToggle.setBorderPainted(false);
        applicationsToggle.setContentAreaFilled(false);
        applicationsToggle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        applicationsToggle.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/applications-selected.png"))); // NOI18N
        applicationsToggle.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/applications-selected.png"))); // NOI18N
        applicationsToggle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        applicationsToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applicationsToggleActionPerformed(evt);
            }
        });

        workshopsToggle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        workshopsToggle.setForeground(new java.awt.Color(255, 255, 255));
        workshopsToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/stand.png"))); // NOI18N
        workshopsToggle.setText("Workshops");
        workshopsToggle.setToolTipText("Control center's workshops");
        workshopsToggle.setBorderPainted(false);
        workshopsToggle.setContentAreaFilled(false);
        workshopsToggle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        workshopsToggle.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/stand-selected.png"))); // NOI18N
        workshopsToggle.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/stand-selected.png"))); // NOI18N
        workshopsToggle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        workshopsToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workshopsToggleActionPerformed(evt);
            }
        });

        conflictsToggle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        conflictsToggle.setForeground(new java.awt.Color(255, 255, 255));
        conflictsToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/conflict.png"))); // NOI18N
        conflictsToggle.setText("Conflicts");
        conflictsToggle.setToolTipText("Deal with internal conflicts");
        conflictsToggle.setBorderPainted(false);
        conflictsToggle.setContentAreaFilled(false);
        conflictsToggle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        conflictsToggle.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/conflict-selected.png"))); // NOI18N
        conflictsToggle.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/conflict-selected.png"))); // NOI18N
        conflictsToggle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        conflictsToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conflictsToggleActionPerformed(evt);
            }
        });

        servicesToggle.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        servicesToggle.setForeground(new java.awt.Color(255, 255, 255));
        servicesToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/admin.png"))); // NOI18N
        servicesToggle.setText("Services");
        servicesToggle.setToolTipText("Administration tasks and settings");
        servicesToggle.setBorderPainted(false);
        servicesToggle.setContentAreaFilled(false);
        servicesToggle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        servicesToggle.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/admin-selected.png"))); // NOI18N
        servicesToggle.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/admin-selected.png"))); // NOI18N
        servicesToggle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        servicesToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesToggleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(servicesToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(conflictsToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(workshopsToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(applicationsToggle, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
            .addComponent(eventsToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(dashboardToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(appIcon)
                .addGap(50, 50, 50)
                .addComponent(dashboardToggle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventsToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(applicationsToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workshopsToggle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conflictsToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(servicesToggle))
        );

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void conflictsToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conflictsToggleActionPerformed
        if(conflictsToggle.isSelected() == false){
            conflictsToggle.setSelected(true);
        } else {
            eventsToggle.setSelected(false);
            applicationsToggle.setSelected(false);
            workshopsToggle.setSelected(false);
            dashboardToggle.setSelected(false);
            servicesToggle.setSelected(false);
            updateMainPanel(conflictsPanel);
        }
    }//GEN-LAST:event_conflictsToggleActionPerformed
    
    private void dashboardToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardToggleActionPerformed
        if(dashboardToggle.isSelected() == false){
            dashboardToggle.setSelected(true);
        } else {
            eventsToggle.setSelected(false);
            applicationsToggle.setSelected(false);
            workshopsToggle.setSelected(false);
            conflictsToggle.setSelected(false);
            servicesToggle.setSelected(false);
            updateMainPanel(dashboardPanel);
        }
    }//GEN-LAST:event_dashboardToggleActionPerformed
    
    private void eventsToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventsToggleActionPerformed
        if(eventsToggle.isSelected() == false){
            eventsToggle.setSelected(true);
        } else {
            dashboardToggle.setSelected(false);
            applicationsToggle.setSelected(false);
            workshopsToggle.setSelected(false);
            conflictsToggle.setSelected(false);
            servicesToggle.setSelected(false);
            updateMainPanel(eventsPanel);
        }
    }//GEN-LAST:event_eventsToggleActionPerformed
    
    private void applicationsToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applicationsToggleActionPerformed
        if(applicationsToggle.isSelected() == false){
            applicationsToggle.setSelected(true);
        } else {
            eventsToggle.setSelected(false);
            dashboardToggle.setSelected(false);
            workshopsToggle.setSelected(false);
            conflictsToggle.setSelected(false);
            servicesToggle.setSelected(false);
            updateMainPanel(applicationsPanel);
        }
    }//GEN-LAST:event_applicationsToggleActionPerformed
    
    private void workshopsToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workshopsToggleActionPerformed
        if(workshopsToggle.isSelected() == false){
            workshopsToggle.setSelected(true);
        } else {
            eventsToggle.setSelected(false);
            applicationsToggle.setSelected(false);
            dashboardToggle.setSelected(false);
            conflictsToggle.setSelected(false);
            servicesToggle.setSelected(false);
            updateMainPanel(standsPanel);
        }
    }//GEN-LAST:event_workshopsToggleActionPerformed
    
    private void servicesToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesToggleActionPerformed
        if(servicesToggle.isSelected() == false){
            servicesToggle.setSelected(true);
        } else {
            eventsToggle.setSelected(false);
            applicationsToggle.setSelected(false);
            workshopsToggle.setSelected(false);
            conflictsToggle.setSelected(false);
            dashboardToggle.setSelected(false);
            updateMainPanel(servicesPanel);
        }
    }//GEN-LAST:event_servicesToggleActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel appIcon;
    private javax.swing.JToggleButton applicationsToggle;
    private javax.swing.JToggleButton conflictsToggle;
    private javax.swing.JToggleButton dashboardToggle;
    private javax.swing.JToggleButton eventsToggle;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JToggleButton servicesToggle;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JToggleButton workshopsToggle;
    // End of variables declaration//GEN-END:variables
}