package ems.gui;
// STATUS: DONE
// ISSUES: NONE

import ems.controller.DecideExpoController;
import ems.model.Event;
import ems.model.EventApplication;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * Panel that allows to control new submissions to event.
 * @author 1DK_1150475_1161975_1161976
 */
public class DecideExpoPanel extends javax.swing.JPanel {

    // Class variables
    private final ApplicationsPanel applicationsPanel;
    private final DecideExpoController decideExpoController;
    private static final ImageIcon QUESTION_ICON = new ImageIcon("src/ems/assets/question.png");
    private static final ImageIcon ERROR_ICON = new ImageIcon("src/ems/assets/error.png");
    private static final ImageIcon CHECK_ICON = new ImageIcon("src/ems/assets/check.png");
    
    /**
     * Creates new form applyToExpoUI
     * @param applicationsPanel
     */
    public DecideExpoPanel(ApplicationsPanel applicationsPanel) {
        this.applicationsPanel = applicationsPanel;
        this.decideExpoController = new DecideExpoController(applicationsPanel.getActiveEMS().getActiveFairCenter());
        initComponents();
        getEventsToComboBox();
        updateSelectedEventInfo();
        getApplicationsToComboBox();
        updateSelectedApplicationInfo();
    }

    private void getEventsToComboBox(){
        for(int i = 0; i<applicationsPanel.getActiveEMS().getActiveFairCenter().getEventRegistry().getEventList().size(); i++){
            eventComboBox.addItem(applicationsPanel.getActiveEMS().getActiveFairCenter().getEventRegistry().getEventList().get(i).getTitle());
        }
    }
    
    private Event getSelectedEvent(){
        String titleAux = eventComboBox.getSelectedItem().toString();
        for(int i = 0; i<applicationsPanel.getActiveEMS().getActiveFairCenter().getEventRegistry().getEventList().size(); i++){
            if(titleAux.equalsIgnoreCase(applicationsPanel.getActiveEMS().getActiveFairCenter().getEventRegistry().getEventList().get(i).getTitle())){
                return applicationsPanel.getActiveEMS().getActiveFairCenter().getEventRegistry().getEventList().get(i);
            } else return null;
        }
        return null;
    }
    
    private void updateSelectedEventInfo(){
        eventComboBox.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                Event eventAux = getSelectedEvent();
                decideExpoController.setActiveEvent(eventAux);
                startDateLabel.setText(eventAux.getStartDate().toAnoMesDiaString());
                endDateLabel.setText(eventAux.getEndDate().toAnoMesDiaString());
                eventIDLabel.setText("ID #" + eventAux.getEventID());
            }
        
        });
    }
    
    private void getApplicationsToComboBox(){
        for(int i = 0; i < getSelectedEvent().getEventApplicationRegistry().getEventApplicationList().size(); i++){
            applicationComboBox.addItem(getSelectedEvent().getEventApplicationRegistry().getEventApplicationList().get(i).getBusinessName());
        }
    }
    
    private EventApplication getSelectedApplication(){
        String companyAux = applicationComboBox.getSelectedItem().toString();
        for(int i = 0; i < getSelectedEvent().getEventApplicationRegistry().getEventApplicationList().size(); i++){
                if(companyAux.equalsIgnoreCase(getSelectedEvent().getEventApplicationRegistry().getEventApplicationList().get(i).getBusinessName())){
                    return getSelectedEvent().getEventApplicationRegistry().getEventApplicationList().get(i);
                } else return null;
        } return null;
    }
    
    private void updateSelectedApplicationInfo(){
        applicationComboBox.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                EventApplication applicationAux = getSelectedApplication();
                decideExpoController.setActiveApplication(applicationAux);
                appDetailsTextArea.setText(applicationAux.toString());
            }
        
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        goBackButton = new javax.swing.JLabel();
        currentTaskLabel = new javax.swing.JLabel();
        submitLabel = new javax.swing.JLabel();
        eraseLabel = new javax.swing.JLabel();
        eventSelectionPanel = new javax.swing.JPanel();
        eventComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startDateLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        endDateLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        eventIDLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        applicationComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        appDetailsTextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        acceptRadioButton = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        declineRadioButton = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        justificationTextArea = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        goBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/back.png"))); // NOI18N
        goBackButton.setToolTipText("Cancel and go back");
        goBackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goBackButtonMouseClicked(evt);
            }
        });

        currentTaskLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        currentTaskLabel.setForeground(new java.awt.Color(255, 255, 255));
        currentTaskLabel.setText("Control new submissions to active event");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(goBackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(currentTaskLabel)
                .addContainerGap(622, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(goBackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(currentTaskLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        submitLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        submitLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/submit.png"))); // NOI18N
        submitLabel.setText("Apply changes");
        submitLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        submitLabel.setIconTextGap(8);
        submitLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        submitLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitLabelMouseClicked(evt);
            }
        });

        eraseLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        eraseLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/erase.png"))); // NOI18N
        eraseLabel.setText("Erase all fields");
        eraseLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eraseLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eraseLabel.setIconTextGap(8);
        eraseLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eraseLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eraseLabelMouseClicked(evt);
            }
        });

        eventSelectionPanel.setBackground(new java.awt.Color(255, 255, 255));
        eventSelectionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Event selection"));

        jLabel1.setText("View undecided event applications for");
        jLabel1.setEnabled(false);

        jLabel2.setText("from");
        jLabel2.setEnabled(false);

        startDateLabel.setText("--/--/----");

        jLabel4.setText("to");
        jLabel4.setEnabled(false);

        endDateLabel.setText("--/--/----");

        jLabel5.setText("with");
        jLabel5.setEnabled(false);

        eventIDLabel.setText("ID #");

        javax.swing.GroupLayout eventSelectionPanelLayout = new javax.swing.GroupLayout(eventSelectionPanel);
        eventSelectionPanel.setLayout(eventSelectionPanelLayout);
        eventSelectionPanelLayout.setHorizontalGroup(
            eventSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventSelectionPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventIDLabel)
                .addContainerGap())
        );
        eventSelectionPanelLayout.setVerticalGroup(
            eventSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventSelectionPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(eventSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Application selection"));

        jLabel3.setText("Decide");
        jLabel3.setEnabled(false);

        jLabel7.setText("Submission details:");
        jLabel7.setEnabled(false);

        appDetailsTextArea.setEditable(false);
        appDetailsTextArea.setColumns(20);
        appDetailsTextArea.setRows(5);
        appDetailsTextArea.setEnabled(false);
        jScrollPane1.setViewportView(appDetailsTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(applicationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(325, 325, 325))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1)
                        .addGap(100, 100, 100))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applicationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Decision"));

        acceptRadioButton.setText("accept this application");
        acceptRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptRadioButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("I choose to:");
        jLabel8.setEnabled(false);

        declineRadioButton.setText("decline this application");
        declineRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineRadioButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Brief justification:");

        justificationTextArea.setColumns(20);
        justificationTextArea.setRows(5);
        jScrollPane2.setViewportView(justificationTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel8))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(declineRadioButton)
                            .addComponent(acceptRadioButton))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel9)
                        .addContainerGap(490, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jScrollPane2)
                        .addGap(100, 100, 100))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(acceptRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(declineRadioButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(eraseLabel)
                        .addGap(38, 38, 38)
                        .addComponent(submitLabel)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eventSelectionPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(38, 38, 38))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(eventSelectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submitLabel)
                    .addComponent(eraseLabel))
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void goBackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackButtonMouseClicked
        String[] answers = {"No", "Yes"};
            int confirmDialog = JOptionPane.showOptionDialog(null, "Are you sure you want to cancel and go back?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, QUESTION_ICON, answers, answers[0]);
                if (confirmDialog == 1) {
                    applicationsPanel.goBackToApplicationsPanel();
                }
    }//GEN-LAST:event_goBackButtonMouseClicked

    private void acceptRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptRadioButtonActionPerformed
        declineRadioButton.setSelected(false);
    }//GEN-LAST:event_acceptRadioButtonActionPerformed

    private void declineRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineRadioButtonActionPerformed
        acceptRadioButton.setSelected(false);
    }//GEN-LAST:event_declineRadioButtonActionPerformed

    private void submitLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitLabelMouseClicked
        String[] answers = {"No", "Yes"};
            int confirmDialog = JOptionPane.showOptionDialog(null, "Are you sure you want to submit this?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, QUESTION_ICON, answers, answers[0]);
                if (confirmDialog == 1) {
                    if(acceptRadioButton.isSelected() == false && declineRadioButton.isSelected() == false){
                        JOptionPane.showMessageDialog(null, "No decision selected!", "Error", JOptionPane.ERROR_MESSAGE, ERROR_ICON);
                    } else if(justificationTextArea.getText().length() == 0){
                        JOptionPane.showMessageDialog(null, "Please justify your decision.", "Error", JOptionPane.ERROR_MESSAGE, ERROR_ICON);                        
                    } else if(acceptRadioButton.isSelected() == true){
                        try {
                            decideExpoController.submitDecision(true, justificationTextArea.getText());
                        } catch (IOException ex) {
                            Logger.getLogger(DecideExpoPanel.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        JOptionPane.showMessageDialog(null, "Decision submitted successfully.", "Notification", JOptionPane.ERROR_MESSAGE, CHECK_ICON);
                    } else if(declineRadioButton.isSelected() == true){
                        try {
                            decideExpoController.submitDecision(false, justificationTextArea.getText());
                        } catch (IOException ex) {
                            Logger.getLogger(DecideExpoPanel.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        JOptionPane.showMessageDialog(null, "Decision submitted successfully.", "Notification", JOptionPane.ERROR_MESSAGE, CHECK_ICON);
                    }
                }
    }//GEN-LAST:event_submitLabelMouseClicked

    private void eraseLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eraseLabelMouseClicked
        String[] answers = {"No", "Yes"};
            int confirmDialog = JOptionPane.showOptionDialog(null, "Are you sure you want to erase all decision fields?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, QUESTION_ICON, answers, answers[0]);
                if (confirmDialog == 1) {
                    declineRadioButton.setSelected(false);
                    acceptRadioButton.setSelected(false);
                    justificationTextArea.setText("");
                    justificationTextArea.transferFocus();
                }
    }//GEN-LAST:event_eraseLabelMouseClicked
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton acceptRadioButton;
    private javax.swing.JTextArea appDetailsTextArea;
    private javax.swing.JComboBox<String> applicationComboBox;
    private javax.swing.JLabel currentTaskLabel;
    private javax.swing.JRadioButton declineRadioButton;
    private javax.swing.JLabel endDateLabel;
    private javax.swing.JLabel eraseLabel;
    private javax.swing.JComboBox<String> eventComboBox;
    private javax.swing.JLabel eventIDLabel;
    private javax.swing.JPanel eventSelectionPanel;
    private javax.swing.JLabel goBackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea justificationTextArea;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JLabel submitLabel;
    // End of variables declaration//GEN-END:variables
}