package ems.gui;
// STATUS: DONE
// ISSUES: NONE

import ems.model.user.ESE;
import ems.model.user.EventManager;
import ems.model.user.Organizer;
import ems.model.user.Representative;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * Panel with application options.
 * @author 1DK_1150475_1161975_1161976
 */
public class ApplicationsPanel extends javax.swing.JPanel {

    // Class variables
    private final EMS ems;
    private JPanel applyToExpoUI;
    private JPanel assignStaffUI;
    private JPanel decideExpoUI;
    private static final ImageIcon ERROR_ICON = new ImageIcon("src/ems/assets/error.png");
    
    
    /**
     * Creates a new applicationsPanel
     * @param ems
     */
    public ApplicationsPanel(EMS ems) {
        this.ems = ems;
        initComponents();
        checkPermissions();
    }
    
    public EMS getActiveEMS() {
        return ems;
    }
    
    private void checkPermissions(){
        if(getActiveEMS().getActiveFairCenter().getActiveUser() instanceof Representative){
            applyExpoButton.setEnabled(true);
            assignStaffButton.setEnabled(false);
            decideExpoButton.setEnabled(false);
        } else if(getActiveEMS().getActiveFairCenter().getActiveUser() instanceof ESE){
            applyExpoButton.setEnabled(false);
            assignStaffButton.setEnabled(false);
            decideExpoButton.setEnabled(true);
        } else if(getActiveEMS().getActiveFairCenter().getActiveUser() instanceof Organizer){
            applyExpoButton.setEnabled(false);
            assignStaffButton.setEnabled(true);
            decideExpoButton.setEnabled(false);
        } else if(getActiveEMS().getActiveFairCenter().getActiveUser() instanceof EventManager){
            applyExpoButton.setEnabled(false);
            assignStaffButton.setEnabled(false);
            decideExpoButton.setEnabled(false);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        applyExpoButton = new javax.swing.JButton();
        applyDemoButton = new javax.swing.JButton();
        editAppButton = new javax.swing.JButton();
        showRemovedButton = new javax.swing.JButton();
        assignStaffButton = new javax.swing.JButton();
        decideExpoButton = new javax.swing.JButton();
        decideDemoButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        applyExpoButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        applyExpoButton.setForeground(new java.awt.Color(33, 113, 216));
        applyExpoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/apply-online.png"))); // NOI18N
        applyExpoButton.setText("APPLY TO EVENT");
        applyExpoButton.setToolTipText("Submit an application to an open event");
        applyExpoButton.setBorderPainted(false);
        applyExpoButton.setContentAreaFilled(false);
        applyExpoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        applyExpoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        applyExpoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyExpoButtonActionPerformed(evt);
            }
        });

        applyDemoButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        applyDemoButton.setForeground(new java.awt.Color(102, 102, 102));
        applyDemoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/apply.png"))); // NOI18N
        applyDemoButton.setText("APPLY TO DEMO");
        applyDemoButton.setToolTipText("Submit an application to an open demo");
        applyDemoButton.setBorderPainted(false);
        applyDemoButton.setContentAreaFilled(false);
        applyDemoButton.setEnabled(false);
        applyDemoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        applyDemoButton.setPreferredSize(new java.awt.Dimension(143, 87));
        applyDemoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        editAppButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        editAppButton.setForeground(new java.awt.Color(102, 102, 102));
        editAppButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/edit.png"))); // NOI18N
        editAppButton.setText("EDIT OR REMOVE");
        editAppButton.setToolTipText("Edit or remove a previously submitted application to an open event or demo");
        editAppButton.setBorderPainted(false);
        editAppButton.setContentAreaFilled(false);
        editAppButton.setEnabled(false);
        editAppButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editAppButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        showRemovedButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        showRemovedButton.setForeground(new java.awt.Color(102, 102, 102));
        showRemovedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/removed.png"))); // NOI18N
        showRemovedButton.setText("SHOW REMOVED");
        showRemovedButton.setToolTipText("List all removed applications from the database");
        showRemovedButton.setBorderPainted(false);
        showRemovedButton.setContentAreaFilled(false);
        showRemovedButton.setEnabled(false);
        showRemovedButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        showRemovedButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        assignStaffButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        assignStaffButton.setForeground(new java.awt.Color(33, 113, 216));
        assignStaffButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/asign-online.png"))); // NOI18N
        assignStaffButton.setText("ASSIGN STAFF");
        assignStaffButton.setToolTipText("Allocate defined ESEs to submitted applications");
        assignStaffButton.setBorderPainted(false);
        assignStaffButton.setContentAreaFilled(false);
        assignStaffButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        assignStaffButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        assignStaffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignStaffButtonActionPerformed(evt);
            }
        });

        decideExpoButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        decideExpoButton.setForeground(new java.awt.Color(33, 113, 216));
        decideExpoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/feedback-online.png"))); // NOI18N
        decideExpoButton.setText("DECIDE EVENT");
        decideExpoButton.setToolTipText("Control new submissions by company representatives to an active event");
        decideExpoButton.setBorderPainted(false);
        decideExpoButton.setContentAreaFilled(false);
        decideExpoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        decideExpoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        decideExpoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decideExpoButtonActionPerformed(evt);
            }
        });

        decideDemoButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        decideDemoButton.setForeground(new java.awt.Color(102, 102, 102));
        decideDemoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ems/assets/assess.png"))); // NOI18N
        decideDemoButton.setText("ASSESS DEMO");
        decideDemoButton.setToolTipText("Assess new requests to workshop demos");
        decideDemoButton.setBorderPainted(false);
        decideDemoButton.setContentAreaFilled(false);
        decideDemoButton.setEnabled(false);
        decideDemoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        decideDemoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(assignStaffButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editAppButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(applyExpoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showRemovedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(applyDemoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(decideExpoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(decideDemoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(applyDemoButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyExpoButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(showRemovedButton)
                    .addComponent(editAppButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(decideDemoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(decideExpoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(assignStaffButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void applyExpoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyExpoButtonActionPerformed
        if(getActiveEMS().getActiveFairCenter().getEventRegistry().getEventList().isEmpty()){
            JOptionPane.showMessageDialog(null, "No available events to apply.\nTry again later.", "Error", JOptionPane.ERROR_MESSAGE, ERROR_ICON);
        } else {
            this.applyToExpoUI = new ApplyToEventPanel(this);
            ems.updateMainPanel(applyToExpoUI);
        }
    }//GEN-LAST:event_applyExpoButtonActionPerformed

    private void assignStaffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignStaffButtonActionPerformed
        if(getActiveEMS().getActiveFairCenter().getEventRegistry().getEventList().isEmpty()){
            JOptionPane.showMessageDialog(null, "No available events to assign.\nTry again later.", "Error", JOptionPane.ERROR_MESSAGE, ERROR_ICON);
        } else {
            this.assignStaffUI = new AssignStaffPanel(this);
            ems.updateMainPanel(assignStaffUI);
        }
    }//GEN-LAST:event_assignStaffButtonActionPerformed

    private void decideExpoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decideExpoButtonActionPerformed
        if(getActiveEMS().getActiveFairCenter().getEventRegistry().getEventList().isEmpty()){
            JOptionPane.showMessageDialog(null, "No available events to decide.\nTry again later.", "Error", JOptionPane.ERROR_MESSAGE, ERROR_ICON);
        } else {
            this.decideExpoUI = new DecideExpoPanel(this);
            ems.updateMainPanel(decideExpoUI);
        }
    }//GEN-LAST:event_decideExpoButtonActionPerformed
    
    public void goBackToApplicationsPanel() {
        ems.updateMainPanel(ems.getApplicationsPanel());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyDemoButton;
    private javax.swing.JButton applyExpoButton;
    private javax.swing.JButton assignStaffButton;
    private javax.swing.JButton decideDemoButton;
    private javax.swing.JButton decideExpoButton;
    private javax.swing.JButton editAppButton;
    private javax.swing.JButton showRemovedButton;
    // End of variables declaration//GEN-END:variables
}