package lapr.project.ui;

import java.awt.Desktop;
import java.awt.MouseInfo;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import lapr.project.controller.XMLController;
import lapr.project.model.CentroExposicoes;
import lapr.project.utils.EncriptacaoDePassword;
import lapr.project.utils.ExportarKeywordsRankingCSV;
import lapr.project.utils.FicheiroBinario;
import org.xml.sax.SAXException;

/**
 * @author Grupo 18_LAPR2 15-16
 */
public class MainUI extends javax.swing.JFrame {

    private CentroExposicoes centroExposicoes;
    private String username;

    /**
     * Creates new form MainUI
     */
    public MainUI(CentroExposicoes centro, String username) {
        this.centroExposicoes = centro;
        this.username = username;
        initManualComponents();
        setLocationRelativeTo(null);
        new Thread() {
            @Override
            public void run() {
                while (true) {
                    Calendar cal = new GregorianCalendar();
                    int hour = cal.get(Calendar.HOUR_OF_DAY);
                    int minute = cal.get(Calendar.MINUTE);
                    int second = cal.get(Calendar.SECOND);
                    // <editor-fold defaultstate="collapsed" desc="if statements clockLabel">
                    if (hour <= 9) {
                        if (minute <= 9) {
                            if (second <= 9) {
                                String time = "0" + hour + ":0" + minute + ":0" + second;
                                clockLabel.setText(time);
                            } else {
                                String time = "0" + hour + ":0" + minute + ":" + second;
                                clockLabel.setText(time);
                            }
                        } else {
                            if (second <= 9) {
                                String time = "0" + hour + ":" + minute + ":0" + second;
                                clockLabel.setText(time);
                            } else {
                                String time = "0" + hour + ":" + minute + ":" + second;
                                clockLabel.setText(time);
                            }
                        }
                    } else {
                        if (minute <= 9) {
                            if (second <= 9) {
                                String time = hour + ":0" + minute + ":0" + second;
                                clockLabel.setText(time);
                            } else {
                                String time = hour + ":0" + minute + ":" + second;
                                clockLabel.setText(time);
                            }
                        } else {
                            if (second <= 9) {
                                String time = hour + ":" + minute + ":0" + second;
                                clockLabel.setText(time);
                            } else {
                                String time = hour + ":" + minute + ":" + second;
                                clockLabel.setText(time);
                            }
                        }
                    }
                }// </editor-fold>
            }
        }.start();
    }

    public String getSession(String username) {
        return " Bem-vindo(a), " + username;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSuperior = new javax.swing.JPanel();
        labelUtilizador = new javax.swing.JLabel();
        labelAlterarUtilizador = new javax.swing.JLabel();
        labelLogout = new javax.swing.JLabel();
        botaoImportar = new javax.swing.JButton();
        botaoExportar = new javax.swing.JButton();
        labelSOGE = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tabsUCs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        botaoCriarExpo = new javax.swing.JButton();
        botaoCriarDemonstracao = new javax.swing.JButton();
        botaoDefinirFAE = new javax.swing.JButton();
        iconExpo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        botaoCriarStand = new javax.swing.JButton();
        botaoAtribuirStand = new javax.swing.JButton();
        botaoConfirmarInteresseStand = new javax.swing.JButton();
        iconStands = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        botaoCriarCandExpo = new javax.swing.JButton();
        botaoCriarCandDemonstracao = new javax.swing.JButton();
        botaoAlterarCand = new javax.swing.JButton();
        botaoRemoverCand = new javax.swing.JButton();
        botaoListarRemovidas = new javax.swing.JButton();
        botaoAtribuirCand = new javax.swing.JButton();
        botaoAvaliarCand = new javax.swing.JButton();
        botaoDecidirCand = new javax.swing.JButton();
        botaoDecidirDemonstracao = new javax.swing.JButton();
        iconCand = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        botaoAtualizarConflito = new javax.swing.JButton();
        iconConflitos = new javax.swing.JLabel();
        labelAvisoLinha1 = new javax.swing.JLabel();
        labelAvisoLinha2 = new javax.swing.JLabel();
        botaoDefinirConflitos = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        botaoDefinirRecursos = new javax.swing.JButton();
        botaoCalcularTaxaAceitacao = new javax.swing.JButton();
        botaoFAEQualityRating = new javax.swing.JButton();
        botaoKeywordRanking = new javax.swing.JButton();
        botaoConfirmarPerfilUtilizador = new javax.swing.JButton();
        iconAdmin = new javax.swing.JLabel();
        labelMENU = new javax.swing.JLabel();
        iconAbout = new javax.swing.JLabel();
        iconHelp = new javax.swing.JLabel();
        clockLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Organização e Gestão de Exposições");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        panelSuperior.setBackground(new java.awt.Color(51, 51, 51));

        labelUtilizador.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        labelUtilizador.setForeground(new java.awt.Color(255, 255, 255));
        final ImageIcon iconUser = new ImageIcon("src/main/resources/user.png");
        labelUtilizador.setIcon(iconUser);
        labelUtilizador.setText(getSession(username));
        labelUtilizador.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelAlterarUtilizador.setForeground(new java.awt.Color(255, 255, 255));
        final ImageIcon iconAlterarUser = new ImageIcon("src/main/resources/userEdit.png");
        labelAlterarUtilizador.setIcon(iconAlterarUser);
        labelAlterarUtilizador.setText(" Alterar perfil de utilizador");
        labelAlterarUtilizador.setToolTipText("Alterar dados do utilizador atual");
        labelAlterarUtilizador.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelAlterarUtilizador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelAlterarUtilizadorMouseClicked(evt);
            }
        });

        labelLogout.setForeground(new java.awt.Color(255, 255, 255));
        final ImageIcon iconLogout = new ImageIcon("src/main/resources/logout.png");
        labelLogout.setIcon(iconLogout);
        labelLogout.setText(" Terminar sessão");
        labelLogout.setToolTipText("Terminar sessão atual e regressar ao ecrã de autenticação");
        labelLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelLogoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelSuperiorLayout = new javax.swing.GroupLayout(panelSuperior);
        panelSuperior.setLayout(panelSuperiorLayout);
        panelSuperiorLayout.setHorizontalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(labelUtilizador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelAlterarUtilizador)
                .addGap(18, 18, 18)
                .addComponent(labelLogout)
                .addGap(10, 10, 10))
        );
        panelSuperiorLayout.setVerticalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUtilizador)
                    .addComponent(labelAlterarUtilizador)
                    .addComponent(labelLogout))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        final ImageIcon icon5 = new ImageIcon("src/main/resources/import.png");
        botaoImportar.setIcon(icon5);
        botaoImportar.setText("Importar dados");
        botaoImportar.setToolTipText("Importar dados para a sessão atual");
        botaoImportar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoImportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botaoImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoImportarActionPerformed(evt);
            }
        });

        final ImageIcon icon6 = new ImageIcon("src/main/resources/export.png");
        botaoExportar.setIcon(icon6);
        botaoExportar.setText("Exportar dados");
        botaoExportar.setToolTipText("Exportar da sessão atual para utilizar no futuro");
        botaoExportar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoExportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botaoExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExportarActionPerformed(evt);
            }
        });

        labelSOGE.setFont(new java.awt.Font("Lucida Grande", 1, 17)); // NOI18N
        labelSOGE.setText("SOGE:");

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        botaoCriarExpo.setText("Criar exposição");
        botaoCriarExpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCriarExpoActionPerformed(evt);
            }
        });

        botaoCriarDemonstracao.setText("Criar demonstração");
        botaoCriarDemonstracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCriarDemonstracaoActionPerformed(evt);
            }
        });

        botaoDefinirFAE.setText("Definir FAE");
        botaoDefinirFAE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDefinirFAEActionPerformed(evt);
            }
        });

        final ImageIcon iconBox = new ImageIcon("src/main/resources/expo.png");
        iconExpo.setIcon(iconBox);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoCriarExpo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoCriarDemonstracao, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(botaoDefinirFAE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 407, Short.MAX_VALUE)
                .addComponent(iconExpo)
                .addGap(7, 7, 7))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(iconExpo)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(botaoCriarExpo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCriarDemonstracao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoDefinirFAE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        tabsUCs.addTab("Exposições", jPanel1);

        botaoCriarStand.setText("Criar stand");
        botaoCriarStand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCriarStandActionPerformed(evt);
            }
        });

        botaoAtribuirStand.setText("Atribuir stand");
        botaoAtribuirStand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtribuirStandActionPerformed(evt);
            }
        });

        botaoConfirmarInteresseStand.setText("Confirmar interesse no stand");
        botaoConfirmarInteresseStand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConfirmarInteresseStandActionPerformed(evt);
            }
        });

        final ImageIcon iconPlace = new ImageIcon("src/main/resources/stand.png");
        iconStands.setIcon(iconPlace);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoConfirmarInteresseStand, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoAtribuirStand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoCriarStand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 407, Short.MAX_VALUE)
                .addComponent(iconStands)
                .addGap(7, 7, 7))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(botaoCriarStand)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoAtribuirStand)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoConfirmarInteresseStand)
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(iconStands)
                .addContainerGap())
        );

        tabsUCs.addTab("Stands", jPanel2);

        botaoCriarCandExpo.setText("Criar à exposição");
        botaoCriarCandExpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCriarCandExpoActionPerformed(evt);
            }
        });

        botaoCriarCandDemonstracao.setText("Criar à demonstração");
        botaoCriarCandDemonstracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCriarCandDemonstracaoActionPerformed(evt);
            }
        });

        botaoAlterarCand.setText("Alterar candidatura");
        botaoAlterarCand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarCandActionPerformed(evt);
            }
        });

        botaoRemoverCand.setText("Remover candidatura");
        botaoRemoverCand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverCandActionPerformed(evt);
            }
        });

        botaoListarRemovidas.setText("Listar removidas");
        botaoListarRemovidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoListarRemovidasActionPerformed(evt);
            }
        });

        botaoAtribuirCand.setText("Atribuir candidatura");
        botaoAtribuirCand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtribuirCandActionPerformed(evt);
            }
        });

        botaoAvaliarCand.setText("Avaliar candidatura");
        botaoAvaliarCand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAvaliarCandActionPerformed(evt);
            }
        });

        botaoDecidirCand.setText("Decidir candidatura");
        botaoDecidirCand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDecidirCandActionPerformed(evt);
            }
        });

        botaoDecidirDemonstracao.setText("Decidir demonstração");
        botaoDecidirDemonstracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDecidirDemonstracaoActionPerformed(evt);
            }
        });

        final ImageIcon iconMail = new ImageIcon("src/main/resources/message.png");
        iconCand.setIcon(iconMail);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoCriarCandExpo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoCriarCandDemonstracao, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(botaoAlterarCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoRemoverCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoListarRemovidas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoAtribuirCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoAvaliarCand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoDecidirCand, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(botaoDecidirDemonstracao, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(iconCand)
                        .addGap(7, 7, 7))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(botaoListarRemovidas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botaoAtribuirCand))
                            .addComponent(botaoDecidirDemonstracao))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botaoAvaliarCand)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botaoDecidirCand)
                                .addContainerGap(22, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(iconCand)
                                .addGap(7, 7, 7))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(botaoCriarCandExpo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoCriarCandDemonstracao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoAlterarCand)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoRemoverCand)
                        .addContainerGap())))
        );

        tabsUCs.addTab("Candidaturas", jPanel3);

        botaoAtualizarConflito.setText("Atualizar conflitos");
        botaoAtualizarConflito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarConflitoActionPerformed(evt);
            }
        });

        final ImageIcon iconStop = new ImageIcon("src/main/resources/conflict.png");
        iconConflitos.setIcon(iconStop);

        labelAvisoLinha1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        labelAvisoLinha1.setForeground(new java.awt.Color(102, 102, 102));
        labelAvisoLinha1.setText("  Atenção:");

        labelAvisoLinha2.setForeground(new java.awt.Color(102, 102, 102));
        labelAvisoLinha2.setText("  a deteção dos conflitos é feita em tempo real.");

        botaoDefinirConflitos.setText("Definir tipos de conflito");
        botaoDefinirConflitos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDefinirConflitosActionPerformed(evt);
            }
        });
        botaoDefinirConflitos.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(labelAvisoLinha2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 337, Short.MAX_VALUE)
                        .addComponent(iconConflitos))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botaoAtualizarConflito, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(labelAvisoLinha1)
                            .addComponent(botaoDefinirConflitos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(botaoAtualizarConflito)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoDefinirConflitos)
                .addGap(37, 37, 37)
                .addComponent(labelAvisoLinha1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelAvisoLinha2)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconConflitos)
                .addContainerGap())
        );

        tabsUCs.addTab("Conflitos", jPanel4);

        botaoDefinirRecursos.setText("Definir recursos");
        botaoDefinirRecursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDefinirRecursosActionPerformed(evt);
            }
        });

        botaoCalcularTaxaAceitacao.setText("Estatísticas de candidatura");
        botaoCalcularTaxaAceitacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCalcularTaxaAceitacaoActionPerformed(evt);
            }
        });

        botaoFAEQualityRating.setText("FAE quality rating");
        botaoFAEQualityRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFAEQualityRatingActionPerformed(evt);
            }
        });

        botaoKeywordRanking.setText("Keyword ranking");
        botaoKeywordRanking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoKeywordRankingActionPerformed(evt);
            }
        });

        botaoConfirmarPerfilUtilizador.setText("Confirmar perfil de utilizador");
        botaoConfirmarPerfilUtilizador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConfirmarPerfilUtilizadorActionPerformed(evt);
            }
        });

        final ImageIcon iconSettings = new ImageIcon("src/main/resources/admin.png");
        iconAdmin.setIcon(iconSettings);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoCalcularTaxaAceitacao, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(botaoFAEQualityRating, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoKeywordRanking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoDefinirRecursos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 408, Short.MAX_VALUE)
                        .addComponent(iconAdmin)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(botaoConfirmarPerfilUtilizador)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoDefinirRecursos)
                    .addComponent(botaoConfirmarPerfilUtilizador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCalcularTaxaAceitacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoFAEQualityRating)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoKeywordRanking)
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(iconAdmin)
                .addContainerGap())
        );

        tabsUCs.addTab("Administração", jPanel5);

        labelMENU.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelMENU.setText("Menu principal");

        final ImageIcon iconLogo = new ImageIcon("src/main/resources/mainSmall.png");
        iconAbout.setIcon(iconLogo);
        iconAbout.setToolTipText("Mais sobre a aplicação");
        iconAbout.setAlignmentX(1.0F);
        iconAbout.setAlignmentY(1.0F);
        iconAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconAboutMouseClicked(evt);
            }
        });

        final ImageIcon iconInfo = new ImageIcon("src/main/resources/help.png");
        iconHelp.setIcon(iconInfo);
        iconHelp.setToolTipText("Documentação online");
        iconHelp.setAlignmentX(1.0F);
        iconHelp.setAlignmentY(1.0F);
        iconHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        iconHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconHelpMouseClicked(evt);
            }
        });

        clockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clockLabel.setText("HH:mm:ss");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(labelSOGE)
                .addGap(10, 10, 10)
                .addComponent(labelMENU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoImportar)
                .addGap(8, 8, 8)
                .addComponent(botaoExportar)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconAbout)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clockLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabsUCs))
                .addGap(34, 34, 34)
                .addComponent(iconHelp)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botaoExportar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelSOGE)
                        .addComponent(labelMENU))
                    .addComponent(botaoImportar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(tabsUCs, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(iconAbout))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(clockLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(iconHelp)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initManualComponents() {
        initComponents();
        // criação dos popups e dos botões
        popupImportar = new javax.swing.JPopupMenu();
        popupExportar = new javax.swing.JPopupMenu();
        impXML = new javax.swing.JMenuItem("Ficheiro XML com dados de Exposição");
        impBIN = new javax.swing.JMenuItem("Ficheiro BIN com dados do Centro de Exposições");
        expBIN = new javax.swing.JMenuItem("Ficheiro BIN com dados do Centro de Exposições");
        // adição dos botões aos popups
        popupImportar.add(impXML);
        popupImportar.add(impBIN);
        popupExportar.add(expBIN);
        // declaração da ação dos botões do menu
        impXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    impXMLActionPerformed(evt);
                } catch (IOException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SAXException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            private void impXMLActionPerformed(ActionEvent evt) throws IOException, ParseException, SAXException {
                popupImportar.setVisible(false);
                JFrame parentFrame = new JFrame();
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Importar dados de XML");
                int userSelection = fileChooser.showOpenDialog(parentFrame);
                File fileXML = fileChooser.getSelectedFile();
                
                XMLController xmlController = new XMLController(centroExposicoes, username);
                xmlController.DivideDados(fileXML);
                
            }
        });
        impBIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impBINActionPerformed(evt);
            }

            private void impBINActionPerformed(ActionEvent evt) {
                popupImportar.setVisible(false);
                JFileChooser fileChooser = new JFileChooser();
                Object resposta = fileChooser.showOpenDialog(MainUI.this);
                File ficheiroBin = fileChooser.getSelectedFile();

                FicheiroBinario ficheiro = new FicheiroBinario(centroExposicoes);

                try {
                    centroExposicoes = ficheiro.ler(ficheiroBin.getPath());

                } catch (IOException | ClassNotFoundException ex) {
                    final ImageIcon icon1 = new ImageIcon("src/main/resources/error.png");
                    JOptionPane.showMessageDialog(null, "Ficheiro não encontrado.", "Erro", JOptionPane.ERROR_MESSAGE, icon1);
                }
            }
        });
        expBIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expBINActionPerformed(evt);
            }

            private void expBINActionPerformed(ActionEvent evt) {
                popupExportar.setVisible(false);
                JFileChooser fileChooser = new JFileChooser();
                Object resposta = fileChooser.showOpenDialog(MainUI.this);
                File ficheiroBin = fileChooser.getSelectedFile();
                String password = "";

                FicheiroBinario ficheiro = new FicheiroBinario(centroExposicoes);

                try {
                    if (!ficheiroBin.getName().endsWith(".bin")) {
                        ficheiroBin = new File(ficheiroBin.getPath().trim() + ".bin");
                    }
                    if (ficheiro.gravar(ficheiroBin.getPath())) {
                        final ImageIcon icon3 = new ImageIcon("src/main/resources/check.png");
                        JOptionPane.showMessageDialog(null, "Ficheiro exportado com sucesso.", "Informação", JOptionPane.ERROR_MESSAGE, icon3);
                    }
                } catch (Exception ex) {
                    final ImageIcon icon2 = new ImageIcon("src/main/resources/error.png");
                    JOptionPane.showMessageDialog(null, "Ficheiro não encontrado ou erro ao exportar.", "Erro", JOptionPane.ERROR_MESSAGE, icon2);
                }
            }
        });
    }

    private void labelAlterarUtilizadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelAlterarUtilizadorMouseClicked
        new AlterarUtilizadorUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_labelAlterarUtilizadorMouseClicked

    private void labelLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelLogoutMouseClicked
        String[] respostas = {"Sim", "Não"};
        final ImageIcon icon = new ImageIcon("src/main/resources/question.png");
        int confirmDialog = JOptionPane.showOptionDialog(null, "Tem a certeza que deseja terminar sessão?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, icon, respostas, respostas[0]);
        if (confirmDialog == 0) {
            this.dispose();
            java.awt.EventQueue.invokeLater(() -> {
                LoginUI s = new LoginUI(centroExposicoes);
                s.setVisible(true);
            });
        }
    }//GEN-LAST:event_labelLogoutMouseClicked

    private void botaoCriarExpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCriarExpoActionPerformed
        if (centroExposicoes.getRegistoGestores().verificarGestorPorUsername(username)) {
            new CriarExposicaoUI(centroExposicoes, username).setVisible(true);
        } else {
            final ImageIcon icon = new ImageIcon("src/main/resources/denied.png");
            JOptionPane.showMessageDialog(null, "Acesso negado.", "Atenção", JOptionPane.ERROR_MESSAGE, icon);
        }
    }//GEN-LAST:event_botaoCriarExpoActionPerformed

    private void botaoCriarStandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCriarStandActionPerformed
        new CriarStandUI(centroExposicoes).setVisible(true);
    }//GEN-LAST:event_botaoCriarStandActionPerformed

    private void botaoCriarCandExpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCriarCandExpoActionPerformed
        new SelecionarExposicaoCriacaoCandidaturaUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoCriarCandExpoActionPerformed

    private void botaoAtualizarConflitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarConflitoActionPerformed
        // FALTA AÇÃO
    }//GEN-LAST:event_botaoAtualizarConflitoActionPerformed

    private void botaoDefinirRecursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDefinirRecursosActionPerformed
        new DefinirRecursosUI(centroExposicoes).setVisible(true);
    }//GEN-LAST:event_botaoDefinirRecursosActionPerformed

    private void botaoConfirmarInteresseStandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConfirmarInteresseStandActionPerformed
        new ConfirmarInteresseStandUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoConfirmarInteresseStandActionPerformed

    private void botaoListarRemovidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoListarRemovidasActionPerformed
        new ListarCandidaturasRemovidasUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoListarRemovidasActionPerformed

    private void botaoDecidirDemonstracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDecidirDemonstracaoActionPerformed
        new DecidirDemonstracaoUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoDecidirDemonstracaoActionPerformed

    private void iconAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconAboutMouseClicked
        new AboutUI().setVisible(true);
    }//GEN-LAST:event_iconAboutMouseClicked

    private void iconHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconHelpMouseClicked
        Desktop d = Desktop.getDesktop();
        try {
            try {
                d.browse(new URI("http://tinyurl.com/hh8pm82"));
            } catch (URISyntaxException ex) {
                Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_iconHelpMouseClicked

    private void botaoCriarDemonstracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCriarDemonstracaoActionPerformed
        new CriarDemonstracaoUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoCriarDemonstracaoActionPerformed

    private void botaoDefinirFAEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDefinirFAEActionPerformed
        new DefinirFAEUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoDefinirFAEActionPerformed

    private void botaoAtribuirStandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtribuirStandActionPerformed
        new AtribuirStandsUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoAtribuirStandActionPerformed

    private void botaoCriarCandDemonstracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCriarCandDemonstracaoActionPerformed
        new CriarCandidaturaDemonstracaoUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoCriarCandDemonstracaoActionPerformed

    private void botaoAlterarCandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarCandActionPerformed
        new SelecionarCandidaturaAlteracaoCandidaturaUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoAlterarCandActionPerformed

    private void botaoRemoverCandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverCandActionPerformed
        new RemoverCandidaturaUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoRemoverCandActionPerformed

    private void botaoAtribuirCandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtribuirCandActionPerformed
        new AtribuirCandidaturaUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoAtribuirCandActionPerformed

    private void botaoAvaliarCandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAvaliarCandActionPerformed
        new AvaliarCandidaturaUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoAvaliarCandActionPerformed

    private void botaoDecidirCandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDecidirCandActionPerformed
        new DecidirCandidaturaUI(centroExposicoes, username).setVisible(true);
    }//GEN-LAST:event_botaoDecidirCandActionPerformed

    private void botaoCalcularTaxaAceitacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCalcularTaxaAceitacaoActionPerformed
        new CalcularTaxaAceitacaoUI(centroExposicoes).setVisible(true);
    }//GEN-LAST:event_botaoCalcularTaxaAceitacaoActionPerformed

    private void botaoFAEQualityRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFAEQualityRatingActionPerformed
        new FAEQualityRatingUI().setVisible(true);
    }//GEN-LAST:event_botaoFAEQualityRatingActionPerformed

    private void botaoKeywordRankingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoKeywordRankingActionPerformed
        ExportarKeywordsRankingCSV exportacao = new ExportarKeywordsRankingCSV();
        exportacao.criarDadosPalavraChave(centroExposicoes.getRegistoExposicoes().getListaExposicoes(), "palavrasPasse.csv");
    }//GEN-LAST:event_botaoKeywordRankingActionPerformed

    private void botaoConfirmarPerfilUtilizadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConfirmarPerfilUtilizadorActionPerformed
        new ConfirmarUtilizadorUI(centroExposicoes).setVisible(true);
    }//GEN-LAST:event_botaoConfirmarPerfilUtilizadorActionPerformed

    private void botaoDefinirConflitosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDefinirConflitosActionPerformed
        // BOTÃO DESATIVADO NA UI!
    }//GEN-LAST:event_botaoDefinirConflitosActionPerformed

    private void botaoExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExportarActionPerformed
        if (popupExportar.isDisplayable()) {
            popupExportar.setVisible(false);
        } else {
            popupExportar.setLocation(MouseInfo.getPointerInfo().getLocation().x, MouseInfo.getPointerInfo().getLocation().y);
            popupExportar.setVisible(true);
        }
    }//GEN-LAST:event_botaoExportarActionPerformed

    private void botaoImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoImportarActionPerformed
        if (popupImportar.isDisplayable()) {
            popupImportar.setVisible(false);
        } else {
            popupImportar.setLocation(MouseInfo.getPointerInfo().getLocation().x, MouseInfo.getPointerInfo().getLocation().y);
            popupImportar.setVisible(true);
        }
    }//GEN-LAST:event_botaoImportarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAlterarCand;
    private javax.swing.JButton botaoAtribuirCand;
    private javax.swing.JButton botaoAtribuirStand;
    private javax.swing.JButton botaoAtualizarConflito;
    private javax.swing.JButton botaoAvaliarCand;
    private javax.swing.JButton botaoCalcularTaxaAceitacao;
    private javax.swing.JButton botaoConfirmarInteresseStand;
    private javax.swing.JButton botaoConfirmarPerfilUtilizador;
    private javax.swing.JButton botaoCriarCandDemonstracao;
    private javax.swing.JButton botaoCriarCandExpo;
    private javax.swing.JButton botaoCriarDemonstracao;
    private javax.swing.JButton botaoCriarExpo;
    private javax.swing.JButton botaoCriarStand;
    private javax.swing.JButton botaoDecidirCand;
    private javax.swing.JButton botaoDecidirDemonstracao;
    private javax.swing.JButton botaoDefinirConflitos;
    private javax.swing.JButton botaoDefinirFAE;
    private javax.swing.JButton botaoDefinirRecursos;
    private javax.swing.JButton botaoExportar;
    private javax.swing.JButton botaoFAEQualityRating;
    private javax.swing.JButton botaoImportar;
    private javax.swing.JButton botaoKeywordRanking;
    private javax.swing.JButton botaoListarRemovidas;
    private javax.swing.JButton botaoRemoverCand;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JLabel iconAbout;
    private javax.swing.JLabel iconAdmin;
    private javax.swing.JLabel iconCand;
    private javax.swing.JLabel iconConflitos;
    private javax.swing.JLabel iconExpo;
    private javax.swing.JLabel iconHelp;
    private javax.swing.JLabel iconStands;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelAlterarUtilizador;
    private javax.swing.JLabel labelAvisoLinha1;
    private javax.swing.JLabel labelAvisoLinha2;
    private javax.swing.JLabel labelLogout;
    private javax.swing.JLabel labelMENU;
    private javax.swing.JLabel labelSOGE;
    private javax.swing.JLabel labelUtilizador;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JTabbedPane tabsUCs;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JPopupMenu popupImportar;
    private javax.swing.JPopupMenu popupExportar;
    private javax.swing.JMenuItem expXML;
    private javax.swing.JMenuItem expBIN;
    private javax.swing.JMenuItem impXML;
    private javax.swing.JMenuItem impBIN;
    // End of manual variables declaration - DO NOT MODIFY
}
