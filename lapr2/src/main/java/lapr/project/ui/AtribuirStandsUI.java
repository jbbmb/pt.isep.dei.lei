package lapr.project.ui;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import lapr.project.controller.AtribuirStandsController;
import lapr.project.model.CentroExposicoes;
import lapr.project.model.Candidatura;
import lapr.project.model.Exposicao;
import lapr.project.model.Stand;

/**
 * @author Grupo 18_LAPR2 15-16
 */
public class AtribuirStandsUI extends javax.swing.JFrame {

    private CentroExposicoes centroExposicoes;
    private String idOrganizador;
    private AtribuirStandsController asctrl;
    private DefaultComboBoxModel listaExposicoesModel = new DefaultComboBoxModel();
    private DefaultComboBoxModel listaCandidaturasModel = new DefaultComboBoxModel();
    private DefaultComboBoxModel listaStandsModel = new DefaultComboBoxModel();

    /**
     * Creates new form AtribuirStandsUI
     */
    public AtribuirStandsUI(CentroExposicoes ce, String id) {
        this.centroExposicoes = ce;
        this.idOrganizador = id;
        this.asctrl = new AtribuirStandsController(centroExposicoes, idOrganizador);
        List<Exposicao> listaExposicoes = asctrl.getListaExposicoes(idOrganizador);
        for (int i = 0; i < listaExposicoes.size(); i++) {
            listaExposicoesModel.addElement(listaExposicoes.get(i).getTitulo());
        }
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        botaoCancelar = new javax.swing.JButton();
        botaoContinuar = new javax.swing.JButton();
        boxStand = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        boxExposicao = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        boxCandidatura = new javax.swing.JComboBox<>();

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Atribuir stand");
        setResizable(false);

        jLabel1.setText("Por favor, selecione um item em cada uma das listas abaixo:");

        jLabel2.setText("Selecione uma candidatura:");

        jLabel3.setText("Selecione um stand:");

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        botaoContinuar.setText("Continuar");
        botaoContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoContinuarActionPerformed(evt);
            }
        });

        boxStand.setModel(listaStandsModel);

        jLabel4.setText("Por favor, selecione a exposição da qual pretende atribuir stands a candidaturas:");

        boxExposicao.setModel(listaExposicoesModel);
        boxExposicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxExposicaoActionPerformed(evt);
            }
        });

        boxCandidatura.setModel(listaCandidaturasModel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(botaoCancelar)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(botaoContinuar))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(boxExposicao, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxStand, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxCandidatura, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(boxExposicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(boxStand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(boxCandidatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCancelar)
                    .addComponent(botaoContinuar))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoContinuarActionPerformed
        if (asctrl.setDados(boxCandidatura.getSelectedIndex(), boxStand.getSelectedIndex())) {
            int confirmDialog = JOptionPane.showConfirmDialog(null, "Tem a certeza que pretende criar esta atribuição?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (confirmDialog == JOptionPane.YES_OPTION) {
                asctrl.registarAtribuicaoStand();
                int loopDialog = JOptionPane.showConfirmDialog(null, "Deseja criar outra atribuição de stand?", "Atenção", JOptionPane.YES_NO_OPTION);
                if (loopDialog == JOptionPane.YES_OPTION) {
                    this.dispose();
                    new AtribuirStandsUI(centroExposicoes, idOrganizador).setVisible(true);
                } else {
                    this.dispose();
                }
            } else {
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Os dados inseridos não são válidos.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botaoContinuarActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        String[] respostas = {"Sim", "Não"};
        final ImageIcon icon = new ImageIcon("src/main/resources/question.png");
        int confirmDialog = JOptionPane.showOptionDialog(null, "Tem a certeza que pretende cancelar a operação?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, icon, respostas, respostas[0]);
        if (confirmDialog == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void boxExposicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxExposicaoActionPerformed
        asctrl.selectExposicao(boxExposicao.getSelectedIndex());
        List<Candidatura> lc = asctrl.getListaCandidaturas();
        for (int i = 0; i < lc.size(); i++) {
            listaCandidaturasModel.addElement(lc.get(i).getNomeEmpresa());
        }
        List<Stand> ls = asctrl.getListaStands();
        for (int i = 0; i < ls.size(); i++) {
            listaStandsModel.addElement(ls.get(i).getDescricao());
        }
    }//GEN-LAST:event_boxExposicaoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoContinuar;
    private javax.swing.JComboBox<String> boxCandidatura;
    private javax.swing.JComboBox<String> boxExposicao;
    private javax.swing.JComboBox<String> boxStand;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
