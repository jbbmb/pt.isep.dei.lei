package lapr.project.ui;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import lapr.project.controller.ConfirmarInteresseStandController;
import lapr.project.model.CentroExposicoes;
import lapr.project.model.Exposicao;

/**
 * @author Grupo 18_LAPR2 15-16
 */
public class ConfirmarInteresseStandUI extends javax.swing.JFrame {

    private String idRepresentante;
    private CentroExposicoes ce;
    private ConfirmarInteresseStandController controller;
    private DefaultComboBoxModel listaExposicoesModel = new DefaultComboBoxModel();

    /**
     * Creates new form ConfirmarAtribuiçãoStandUI
     */
    public ConfirmarInteresseStandUI(CentroExposicoes ce, String idRepresentante) {
        this.ce = ce;
        this.idRepresentante = idRepresentante;
        controller = new ConfirmarInteresseStandController(ce, idRepresentante);
        List<Exposicao> listaExposicoes = controller.getRegistoExposicoes();
        for (int i = 0; i < listaExposicoes.size(); i++) {
            listaExposicoesModel.addElement(listaExposicoes.get(i).getTitulo());
        }
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ConfirmacaoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldStand = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        fieldCandidatura = new javax.swing.JTextArea();
        StandLabel = new javax.swing.JLabel();
        CandidaturaLabel = new javax.swing.JLabel();
        botaoCancelar = new javax.swing.JButton();
        botaoContinuar = new javax.swing.JButton();
        boxExposicoes = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Confirmar interesse no stand");
        setResizable(false);

        ConfirmacaoLabel.setText("Selecione a exposição a que se candidatou:");

        fieldStand.setEditable(false);
        fieldStand.setColumns(20);
        fieldStand.setRows(5);
        fieldStand.setEnabled(false);
        jScrollPane1.setViewportView(fieldStand);

        fieldCandidatura.setEditable(false);
        fieldCandidatura.setColumns(20);
        fieldCandidatura.setRows(5);
        fieldCandidatura.setEnabled(false);
        jScrollPane2.setViewportView(fieldCandidatura);

        StandLabel.setText("Stand que lhe foi atribuído:");
        StandLabel.setEnabled(false);

        CandidaturaLabel.setText("Resumo da sua candidatura:");
        CandidaturaLabel.setEnabled(false);

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        botaoContinuar.setText("Continuar");
        botaoContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoContinuarActionPerformed(evt);
            }
        });

        boxExposicoes.setModel(listaExposicoesModel);
        boxExposicoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxExposicoesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botaoCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoContinuar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(StandLabel)
                        .addComponent(CandidaturaLabel)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ConfirmacaoLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(boxExposicoes, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2)
                        .addComponent(jScrollPane1)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConfirmacaoLabel)
                    .addComponent(boxExposicoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CandidaturaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(StandLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCancelar)
                    .addComponent(botaoContinuar))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        String[] respostas = {"Sim", "Não"};
        final ImageIcon icon = new ImageIcon("src/main/resources/question.png");
        int confirmDialog = JOptionPane.showOptionDialog(null, "Tem a certeza que pretende cancelar a operação?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, icon, respostas, respostas[0]);
        if (confirmDialog == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void botaoContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoContinuarActionPerformed
        String[] respostas = {"Sim", "Não"};
        final ImageIcon icon = new ImageIcon("src/main/resources/question.png");
        int confirmDialog = JOptionPane.showOptionDialog(null, "Confirma interesse no stand que lhe foi atribuído?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, icon, respostas, respostas[0]);
        if (confirmDialog == 0) {
            controller.setStand();
            final ImageIcon icon2 = new ImageIcon("src/main/resources/info.png");
            JOptionPane.showMessageDialog(null, "Stand confirmado com sucesso.", "Informação", JOptionPane.ERROR_MESSAGE, icon2);
            this.dispose();
        }
    }//GEN-LAST:event_botaoContinuarActionPerformed

    private void boxExposicoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxExposicoesActionPerformed
        boolean flag = true;
        try {
            controller.selecionaExposicao(boxExposicoes.getSelectedIndex());
            fieldCandidatura.setText(controller.getStandAtribuido());
            fieldStand.setText(controller.getCandidatura());
        } catch (NullPointerException exc) {
            final ImageIcon icon = new ImageIcon("src/main/resources/question.png");
            JOptionPane.showMessageDialog(null, "não possui candidaturas para esta exposicão, ou stands atribuidos à sua candidatura.", "Erro", JOptionPane.ERROR_MESSAGE, icon);
            flag = false;

        }
        if (flag) {
            CandidaturaLabel.setEnabled(true);
            fieldCandidatura.setEnabled(true);
            StandLabel.setEnabled(true);
            fieldStand.setEnabled(true);
        }


    }//GEN-LAST:event_boxExposicoesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CandidaturaLabel;
    private javax.swing.JLabel ConfirmacaoLabel;
    private javax.swing.JLabel StandLabel;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoContinuar;
    private javax.swing.JComboBox<String> boxExposicoes;
    private javax.swing.JTextArea fieldCandidatura;
    private javax.swing.JTextArea fieldStand;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
