package lapr.project.ui;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import lapr.project.controller.DefinirFAEController;
import lapr.project.model.CentroExposicoes;
import lapr.project.model.Exposicao;
import lapr.project.model.FAE;
import lapr.project.model.ListaFAE;

/** @author Grupo 18_LAPR2 15-16 */

public class DefinirFAEUI extends javax.swing.JFrame {

    private CentroExposicoes centro;
    private DefinirFAEController controller;
    private String username;
    private DefaultComboBoxModel listaExposicoesOrganizadorModel = new DefaultComboBoxModel();
    private DefaultListModel listaUtilizadoresModel = new DefaultListModel();
    private DefaultListModel listaFAEModel = new DefaultListModel();

    /**
     * Creates new form DefinirFAEUI
     */
    public DefinirFAEUI(CentroExposicoes centro, String username) {
        this.centro = centro;
        this.username = username;
        controller = new DefinirFAEController(centro);
        List<Exposicao> listaExposicao = controller.getListaExposicoesOrganizador(username);
        for (int i = 0; i < listaExposicao.size(); i++) {
            listaExposicoesOrganizadorModel.addElement(listaExposicao.get(i).getTitulo());
        }
        for (int i = 0; i < controller.getListaUtilizadores().getListaUtilizadores().size(); i++) {
            if (!username.equals(controller.getListaUtilizadores().getListaUtilizadores().get(i).
                    getUsername())) {
                listaUtilizadoresModel.addElement(controller.
                        getListaUtilizadores().getListaUtilizadores().get(i).getUsername());
            }
        }
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaUtilizadores = new javax.swing.JList<>();
        botaoParaDefinido = new javax.swing.JButton();
        botaoParaUtilizadorNormal = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaFAEs = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        boxExposicoes = new javax.swing.JComboBox<>();
        botaoContinuar = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Definir FAE");
        setResizable(false);

        jLabel5.setText("Utilizadores:");

        listaUtilizadores.setModel(listaUtilizadoresModel);
        jScrollPane2.setViewportView(listaUtilizadores);

        botaoParaDefinido.setText(">");
        botaoParaDefinido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoParaDefinidoActionPerformed(evt);
            }
        });

        botaoParaUtilizadorNormal.setText("<");
        botaoParaUtilizadorNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoParaUtilizadorNormalActionPerformed(evt);
            }
        });

        jLabel6.setText("FAEs definidos:");

        listaFAEs.setModel(listaFAEModel);
        jScrollPane3.setViewportView(listaFAEs);

        jLabel1.setText("Por favor, selecione uma exposição:");

        boxExposicoes.setModel(listaExposicoesOrganizadorModel);
        boxExposicoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxExposicoesActionPerformed(evt);
            }
        });

        botaoContinuar.setText("Continuar");
        botaoContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoContinuarActionPerformed(evt);
            }
        });

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxExposicoes, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botaoCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoContinuar)
                .addGap(15, 15, 15))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoParaDefinido, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botaoParaUtilizadorNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(boxExposicoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(botaoParaDefinido, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botaoParaUtilizadorNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoContinuar)
                    .addComponent(botaoCancelar))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoParaDefinidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoParaDefinidoActionPerformed
        int indice = listaUtilizadores.getSelectedIndex();
        if (indice >= 0) {
            listaFAEModel.addElement(listaUtilizadores.getSelectedValue());
            FAE fae = controller.addFAE(controller.getListaUtilizadores()
                    .getUtilizador(listaUtilizadores.getSelectedValue().toString()),
                    controller.getListaExposicoesOrganizador(username).
                    get(boxExposicoes.getSelectedIndex()));
            for (int i = 0; i < listaFAEModel.size(); i++) {
            controller.registaFAE(fae);
            }
        }
    }//GEN-LAST:event_botaoParaDefinidoActionPerformed

    private void botaoParaUtilizadorNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoParaUtilizadorNormalActionPerformed
        if (listaFAEs.getSelectedIndex() >= 0) {
            listaFAEModel.remove(listaFAEs.getSelectedIndex());
            controller.getListaFAE(controller.getListaExposicoesOrganizador(username).
                    get(boxExposicoes.getSelectedIndex())).getListaFAE().
                    remove(listaFAEs.getSelectedIndex());
        }
    }//GEN-LAST:event_botaoParaUtilizadorNormalActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        String[] respostas = {"Sim", "Não"};
        final ImageIcon icon = new ImageIcon("src/main/resources/question.png");
        int confirmDialog = JOptionPane.showOptionDialog(null, "Tem a certeza "
                + "que deseja terminar operação?", "Atenção",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                icon, respostas, respostas[0]);
        if (confirmDialog == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void botaoContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoContinuarActionPerformed
        if (listaFAEModel.size() > 1) {
            final ImageIcon icon2 = new ImageIcon("src/main/resources/check.png");
                JOptionPane.showMessageDialog(null, "FAEs definidos com sucesso.", "Erro", JOptionPane.ERROR_MESSAGE, icon2);
            this.dispose();
        } else {
            final ImageIcon icon1 = new ImageIcon("src/main/resources/error.png");
                JOptionPane.showMessageDialog(null, "Por favor, adicione pelo menos 2 FAEs.", "Erro", JOptionPane.ERROR_MESSAGE, icon1);
        }
    }//GEN-LAST:event_botaoContinuarActionPerformed

    private void boxExposicoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxExposicoesActionPerformed
        ListaFAE listaFAE = controller.
                getListaFAE(controller.getListaExposicoesOrganizador(username).
                        get(boxExposicoes.getSelectedIndex()));
        for (int i = 0; i < controller.getListaFAE(controller.
                getListaExposicoesOrganizador(username).get(boxExposicoes.
                        getSelectedIndex())).getListaFAE().size(); i++) {
            listaFAEModel.addElement(listaFAE.getListaFAE().get(i).
                    getUtilizador().getUsername());
        }
    }//GEN-LAST:event_boxExposicoesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoContinuar;
    private javax.swing.JButton botaoParaDefinido;
    private javax.swing.JButton botaoParaUtilizadorNormal;
    private javax.swing.JComboBox<String> boxExposicoes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listaFAEs;
    private javax.swing.JList<String> listaUtilizadores;
    // End of variables declaration//GEN-END:variables
}